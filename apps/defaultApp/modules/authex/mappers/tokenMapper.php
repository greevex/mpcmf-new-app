<?php

namespace mpcmf\modules\authex\mappers;

use mpcmf\modules\moduleBase\mappers\mapperBase;
use mpcmf\system\pattern\singleton;

/**
 * Class tokenMapper
 *
 * Tokens for access to api
 *
 *
  * @generated by mpcmf/codeManager
 *
 * @package mpcmf\modules\authex\mappers
 * @date 2015-08-17 15:33:33
 *
 * @author Dmitry Emelyanov <gilberg.vrn@gmail.com>
 */
class tokenMapper
    extends mapperBase
{

    use singleton;

    const FIELD___ID = '_id';
    const FIELD__TOKEN = 'token';
    const FIELD__UNLIMITED = 'unlimited';
    const FIELD__LIMIT = 'limit';
    const FIELD__EXPIRE = 'expire';
    const FIELD__ACTIVITY = 'activity';
    const FIELD__REQUESTS = 'requests';
    const FIELD__USER = 'user';

    const DEFAULT_LIMIT = 20000;

    public function getPublicName()
    {
        return 'Tokens';
    }

    /**
     * Entity map
     *
     * @return array[]
     */
    public function getMap()
    {
        return [
            self::FIELD___ID => [
                'getter' => 'getMongoId',
                'setter' => 'setMongoId',
                'role' => [
                  'key' => true,
                  'generate-key' => true,
                  'sortable' => true,
                ],
                'name' => 'Mongo ID',
                'description' => 'Mongo ID',
                'type' => 'string',
                'formType' => 'text',
                'validator' => [
                ],
                'options' => [
                  'required' => false,
                  'unique' => true,
                ],
            ],
            self::FIELD__TOKEN => [
                'getter' => 'getToken',
                'setter' => 'setToken',
                'role' => [
                ],
                'name' => 'Token string',
                'description' => 'Token string',
                'type' => 'string',
                'formType' => 'text',
                'validator' => [
                    [
                        'type' => 'type.check',
                        'data' => [
                            'type' => 'string'
                        ]
                    ],
                ],
                'options' => [
                  'required' => false,
                  'unique' => true,
                ],
            ],
            self::FIELD__UNLIMITED => [
                'getter' => 'getUnlimited',
                'setter' => 'setUnlimited',
                'role' => [
                ],
                'name' => 'Is unlimited',
                'description' => 'Is token hasn\'t rate limits',
                'type' => 'boolean',
                'formType' => 'checkbox',
                'validator' => [
                ],
                'options' => [
                  'required' => false,
                  'unique' => false,
                ],
            ],
            self::FIELD__LIMIT => [
                'getter' => 'getLimit',
                'setter' => 'setLimit',
                'role' => [
                ],
                'name' => 'Limit',
                'description' => 'Limit per hour',
                'type' => 'int',
                'formType' => 'text',
                'validator' => [
                ],
                'options' => [
                  'required' => false,
                  'unique' => false,
                ],
            ],
            self::FIELD__EXPIRE => [
                'getter' => 'getExpire',
                'setter' => 'setExpire',
                'role' => [
                ],
                'name' => 'Expire',
                'description' => 'Expire date',
                'type' => 'int',
                'formType' => 'datetimepicker',
                'validator' => [
                ],
                'options' => [
                  'required' => false,
                  'unique' => false,
                ],
            ],
            self::FIELD__ACTIVITY => [
                'getter' => 'getActivity',
                'setter' => 'setActivity',
                'role' => [
                ],
                'name' => 'Activity',
                'description' => 'Activity date',
                'type' => 'int',
                'formType' => 'datetimepicker',
                'validator' => [
                ],
                'options' => [
                  'required' => false,
                  'unique' => false,
                ],
            ],
            self::FIELD__REQUESTS => [
                'getter' => 'getRequests',
                'setter' => 'setRequests',
                'role' => [
                ],
                'name' => 'Requests',
                'description' => 'Total requests',
                'type' => 'int',
                'formType' => 'text',
                'validator' => [
                ],
                'options' => [
                  'required' => false,
                  'unique' => false,
                ],
            ],
            self::FIELD__USER => [
                'getter' => 'getUserId',
                'setter' => 'setUserId',
                'role' => [
                ],
                'name' => 'User',
                'description' => 'User, who assigned with this token',
                'type' => 'string',
                'formType' => 'select',
                'validator' => [
                ],
                'relations' => [
                    'tokenUser' => [
                        'getter' => 'getUser',
                        'setter' => 'setUser',
                        'type' => self::RELATION__ONE_TO_ONE,
                        'mapper' => userMapper::class
                    ]
                ],
                'options' => [
                  'required' => false,
                  'unique' => false,
                ],
            ],
        ];
    }
}